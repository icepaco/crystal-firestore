steps:
  # Run tests and save to file
   # Build stage (similar to your "builder" stage in Dockerfile)
  - name: 'crystallang/crystal:1.7.2-alpine'
    id: 'builder'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        set -ex
        mkdir -p /opt
        cd /opt
        cp /workspace/shard.yml /workspace/shard.lock .
        shards install -v
        cp -r /workspace/* .
        crystal build --static --release ./src/firestore/stub.cr
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t',
           'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud@sha256:5c1a7c7be5d5b589166de56940b8a9e1fbb45f085ee8aba1a48ad33bbcc0ba1f'
    args: ['run', 'deploy', 'firestore-${SHORT_SHA}',
           '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA',
           '--region=us-central1', '--allow-unauthenticated', '--execution-environment=gen2',
           '--set-env-vars=APP_URL=$_URL_NAME, GOOGLE_CLOUD_PROJECT=$PROJECT_ID',
           ]
# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://$_BUCKET_NAME/
    paths:
      - ${SHORT_SHA}_test_log.xml
options:
  logging: CLOUD_LOGGING_ONLY
# Store images in Google Artifact Registry
images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/myimage:$SHORT_SHA